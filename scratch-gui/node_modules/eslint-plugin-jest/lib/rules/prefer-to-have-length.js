"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _util = require("./util");

var _default = {
  meta: {
    docs: {
      url: (0, _util.getDocsUrl)(__filename)
    },
    messages: {
      useToHaveLength: 'Use toHaveLength() instead'
    },
    fixable: 'code',
    schema: []
  },

  create(context) {
    return {
      CallExpression(node) {
        if (!((0, _util.expectNotCase)(node) || (0, _util.expectResolvesCase)(node) || (0, _util.expectRejectsCase)(node)) && (0, _util.expectCaseWithParent)(node) && ((0, _util.method)(node).name === 'toBe' || (0, _util.method)(node).name === 'toEqual') && node.arguments[0].property && node.arguments[0].property.name === 'length') {
          const propertyDot = context.getSourceCode().getFirstTokenBetween(node.arguments[0].object, node.arguments[0].property, token => token.value === '.');
          context.report({
            fix(fixer) {
              return [fixer.remove(propertyDot), fixer.remove(node.arguments[0].property), fixer.replaceText((0, _util.method)(node), 'toHaveLength')];
            },

            messageId: 'useToHaveLength',
            node: (0, _util.method)(node)
          });
        }
      }

    };
  }

};
exports.default = _default;